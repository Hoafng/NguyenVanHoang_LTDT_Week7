{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Screen01(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.containerImgBike,\n      children: _jsx(Image, {\n        style: {\n          width: '300px',\n          height: '250px'\n        },\n        source: require(\"../assets/Image 95.png\")\n      })\n    }), _jsx(Text, {\n      style: styles.txtManage,\n      children: \"MANAGE YOUR TASK\"\n    }), _jsx(SafeAreaView, {\n      children: _jsx(TextInput, {\n        style: styles.txtEmail,\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"Enter your name\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStart,\n      onPress: function onPress() {\n        navigation.navigate('Hinh2');\n      },\n      children: _jsx(Text, {\n        style: styles.txtButton,\n        children: \"Get Started \\u2192\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  txtManage: {\n    fontSize: 30,\n    width: '220px',\n    textAlign: 'center'\n  },\n  txtEmail: {},\n  txtButton: {\n    fontSize: 25,\n    padding: 25,\n    borderRadius: 30,\n    backgroundColor: '#00BDD6',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","SafeAreaView","jsx","_jsx","jsxs","_jsxs","Screen01","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","View","style","styles","container","children","containerImgBike","Image","width","height","source","require","Text","txtManage","TextInput","txtEmail","onChangeText","value","placeholder","TouchableOpacity","buttonStart","onPress","navigate","txtButton","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","fontSize","textAlign","padding","borderRadius","color"],"sources":["D:/HocKi7_2023-2024/LapTrinhDiDong/20102201_03_NguyenQuocDuy_week7-main/Tuan7/component/Screen01.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity, TextInput} from 'react-native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SafeAreaView } from 'react-native-web';\r\nexport default function Screen01({navigation}) {\r\n    const [email,setEmail] = useState('');\r\n    return (\r\n        <View style={styles.container}>           \r\n            <View style={styles.containerImgBike}>\r\n                <Image style={{ width: '300px',height: '250px',}}\r\n                    source={require('../assets/Image 95.png')} />\r\n            </View>\r\n            <Text style={styles.txtManage}>MANAGE YOUR TASK</Text>\r\n            <SafeAreaView>\r\n                <TextInput\r\n                    style={styles.txtEmail}\r\n                    onChangeText={setEmail}\r\n                    value={email}\r\n                    placeholder='Enter your name'\r\n                />\r\n            </SafeAreaView>\r\n            <TouchableOpacity style={styles.buttonStart} \r\n                onPress={() =>{\r\n                    navigation.navigate('Hinh2');\r\n                }}\r\n                >\r\n                <Text style={styles.txtButton} >Get Started &rarr;</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },txtManage:{\r\n        fontSize:30,\r\n        width:'220px',\r\n        textAlign:'center',\r\n    },txtEmail:{\r\n\r\n    }\r\n    ,\r\n    txtButton:{\r\n        fontSize:25,\r\n        padding: 25,\r\n        borderRadius:30,\r\n        backgroundColor:'#00BDD6',\r\n        color:'white',\r\n    },\r\n});"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,YAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxC,IAAAC,SAAA,GAAyBT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAACG,QAAQ,GAAAH,UAAA;EACrB,OACIL,KAAA,CAACS,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1Bf,IAAA,CAACW,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACG,gBAAiB;MAAAD,QAAA,EACjCf,IAAA,CAACiB,KAAK;QAACL,KAAK,EAAE;UAAEM,KAAK,EAAE,OAAO;UAACC,MAAM,EAAE;QAAQ,CAAE;QAC7CC,MAAM,EAAEC,OAAO,yBAAyB;MAAE,CAAE;IAAC,CAC/C,CAAC,EACPrB,IAAA,CAACsB,IAAI;MAACV,KAAK,EAAEC,MAAM,CAACU,SAAU;MAAAR,QAAA,EAAC;IAAgB,CAAM,CAAC,EACtDf,IAAA,CAACF,YAAY;MAAAiB,QAAA,EACTf,IAAA,CAACwB,SAAS;QACNZ,KAAK,EAAEC,MAAM,CAACY,QAAS;QACvBC,YAAY,EAAEhB,QAAS;QACvBiB,KAAK,EAAElB,KAAM;QACbmB,WAAW,EAAC;MAAiB,CAChC;IAAC,CACQ,CAAC,EACf5B,IAAA,CAAC6B,gBAAgB;MAACjB,KAAK,EAAEC,MAAM,CAACiB,WAAY;MACxCC,OAAO,EAAE,SAAAA,QAAA,EAAK;QACV1B,UAAU,CAAC2B,QAAQ,CAAC,OAAO,CAAC;MAChC,CAAE;MAAAjB,QAAA,EAEFf,IAAA,CAACsB,IAAI;QAACV,KAAK,EAAEC,MAAM,CAACoB,SAAU;QAAAlB,QAAA,EAAE;MAAkB,CAAM;IAAC,CAC3C,CAAC;EAAA,CACjB,CAAC;AAEf;AACA,IAAMF,MAAM,GAAGqB,UAAU,CAACC,MAAM,CAAC;EAC7BrB,SAAS,EAAE;IACPsB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE;EAChB,CAAC;EAAChB,SAAS,EAAC;IACRiB,QAAQ,EAAC,EAAE;IACXtB,KAAK,EAAC,OAAO;IACbuB,SAAS,EAAC;EACd,CAAC;EAAChB,QAAQ,EAAC,CAEX,CAAC;EAEDQ,SAAS,EAAC;IACNO,QAAQ,EAAC,EAAE;IACXE,OAAO,EAAE,EAAE;IACXC,YAAY,EAAC,EAAE;IACfN,eAAe,EAAC,SAAS;IACzBO,KAAK,EAAC;EACV;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}